#version 320 es

layout (location = 0) in vec3 vPosition;
layout(location = 1) in vec2 uv;

layout(binding = 0) uniform VertInfo {
    vec2 viewSize;
    vec2 texSize;
    vec2 texPos;
    float start;
    float duration;
    float time;
} info;

//layout(binding = 0) buffer Input1 {
//    vec2 viewSize;
//    vec2 texSize;
//    vec2 textPos;
//} input1;

out vec2 texCoord;

float convx(float x){
    vec2 viewSize = info.viewSize;
    return x * 2.0f / viewSize.x - 1.0f;
}

float convy(float y){
    vec2 viewSize = info.viewSize;
    return -( y * 2.0f / viewSize.y - 1.0f);
}

const float PI  = 3.141592653589793;

void main() {
    vec2 texSize = info.texSize;
    vec2 pos = info.texPos;

    vec3 v;
    v.z = 0.0f;
    float expRate = 1.0f;
    if(info.start <= info.time && info.time <= info.start + info.duration){
        expRate = sin(PI * (info.time - info.start)/info.duration);
    }
    else{
        expRate = 0.0f;
    }

    vec2 center = vec2(pos.x + texSize.x/2.0f, pos.y + texSize.y/2.0f);
    float xLen = (texSize.x/2.0f)*expRate;
    float yLen = (texSize.y/2.0f)*expRate;
    v.x = vPosition.x == 1.0f ? convx(center.x+xLen) : convx(center.x-xLen);
    v.y = vPosition.y == 1.0f ? convy(center.y+yLen) : convy(center.y-yLen);

    gl_Position = vec4(v, 1.0f);
    texCoord = uv;
}
