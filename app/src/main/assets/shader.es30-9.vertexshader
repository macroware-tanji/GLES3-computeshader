#version 310 es

layout (location = 0) in vec3 vPosition;
layout(location = 1) in vec2 uv;

layout(binding = 0) uniform Input0 {
    vec2 viewSize;
    vec2 texSize;
} input0;

layout(binding = 0) buffer Input1 {
    vec2 viewSize;
    vec2 texSize;
} input1;

out vec2 texCoord;

float convx(float x){
    vec2 viewSize = input1.viewSize;
    vec2 texSize = input1.texSize;
    return x * 2.0f / viewSize.x - 1.0f;
}

float convy(float y){
    vec2 viewSize = input1.viewSize;
    vec2 texSize = input1.texSize;
    return -( y * 2.0f / viewSize.y - 1.0f);
}

void main() {
    vec2 viewSize = input1.viewSize;
    vec2 texSize = input1.texSize;

    vec3 v;
    v.z = 0.0f;

    vec2 pos;
    pos.x=100.0f;
    pos.y=100.0f;

    if( vPosition.x == 1.0f && vPosition.y == 1.0f){//Upper right
        v.x = convx(pos.x+texSize.x);
        v.y = convy(pos.y);
    }
    else if( vPosition.x == -1.0f && vPosition.y == 1.0f){//Upper left
        v.x = convx(pos.x);
        v.y = convy(pos.y);
    }
    else if( vPosition.x == -1.0f && vPosition.y == -1.0f){//Lower left
        v.x = convx(pos.x);
        v.y = convy(pos.y+texSize.y);
    }
    else if( vPosition.x == 1.0f && vPosition.y == -1.0f){//Lower right
        v.x = convx(pos.x+texSize.x);
        v.y = convy(pos.y+texSize.y);
    }

    gl_Position = vec4(v, 1.0);
    texCoord = uv;
}
